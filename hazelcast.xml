<?xml version="1.0" encoding="UTF-8"?>
<hazelcast
        xmlns="http://www.hazelcast.com/schema/config"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.hazelcast.com/schema/config
        http://www.hazelcast.com/schema/config/hazelcast-config-3.12.xsd"
        >

    <group>
        <name>${hz.groupName}</name>
    </group>

    <management-center enabled="true">
        http://${hz.management.center}:8080/hazelcast-mancenter
    </management-center>

    <network>
        <join>
            <multicast enabled="false"/>
            <tcp-ip enabled="${hz.tcp.enabled}">
                <!-- Must be passed via -Dip4.addr on command line -->
                <interface>${hz.ip4.addr}</interface>
            </tcp-ip>
            <kubernetes enabled="${hz.kubernetes.enabled}">
                <service-dns>${hz.service.dns}</service-dns>
                <service-port>${hz.service.port}</service-port>
            </kubernetes>
        </join>
	<rest-api enabled="true">
            <endpoint-group name="HEALTH_CHECK" enabled="true"/>
        </rest-api>
    </network>

    <properties>
        <property name="hazelcast.map.entry.filtering.natural.event.types">true</property>
        <property name="hazelcast.slow.operation.detector.stacktrace.logging.enabled">true</property>
        <property name="hazelcast.initial.min.cluster.size">3</property>
    </properties>

    <cp-subsystem>
        <cp-member-count>3</cp-member-count>
    </cp-subsystem>

    <executor-service name="executor">
        <pool-size>20</pool-size>
        <statistics-enabled>true</statistics-enabled>
    </executor-service>

    <scheduled-executor-service name="scheduledExecutor">
        <pool-size>5</pool-size>
    </scheduled-executor-service>

    <event-journal enabled="true">
        <mapName>preAuth</mapName>
        <capacity>1000000</capacity>
    </event-journal>

    <serialization>
        <data-serializable-factories>
            <data-serializable-factory factory-id="101">
                com.theyawns.IDSFactory
            </data-serializable-factory>
        </data-serializable-factories>
    </serialization>

    <map name="merchantMap">
        <map-store enabled="true" initial-mode="EAGER">
            <class-name>com.theyawns.domain.payments.database.MerchantTable</class-name>
        </map-store>
    </map>

    <map name="accountMap">
        <map-store enabled="true" initial-mode="EAGER">
            <class-name>com.theyawns.domain.payments.database.AccountTable</class-name>
        </map-store>
    </map>

    <map name="preAuth">
        <!-- Nothing should take longer than 5 minutes from ingest until disposition, smo max idle should
             be sufficient to keep our map size manageable; max-size set as a backstop -->
        <time-to-live-seconds>0</time-to-live-seconds>
        <max-idle-seconds>300</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">200000</max-size>
        <map-store enabled="true" initial-mode="LAZY">
            <class-name>com.theyawns.domain.payments.database.TransactionTable</class-name>
        </map-store>
    </map>

    <map name="approved">
        <!-- In a real app we'd flush these to disk at some point, but here we just expire them -->
        <time-to-live-seconds>0</time-to-live-seconds>
        <max-idle-seconds>300</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">10000</max-size>
    </map>

    <map name="rejectedForCredit">
        <!-- In a real app we'd flush these to disk at some point, but here we just expire them -->
        <time-to-live-seconds>0</time-to-live-seconds>
        <max-idle-seconds>300</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">10000</max-size>
    </map>

    <map name="rejectedForFraud">
        <!-- In a real app we'd flush these to disk at some point, but here we just expire them -->
        <time-to-live-seconds>0</time-to-live-seconds>
        <max-idle-seconds>300</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">10000</max-size>
    </map>

    <license-key/>

</hazelcast>
